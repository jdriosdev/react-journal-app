{"ast":null,"code":"var _jsxFileName = \"/home/juan/dev/portfolio/react-2/src/components/auth/RegisterScreen.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useForm } from '../../hooks/useForm';\nimport { removeError, setError } from '../../actions/ui';\nimport validator from 'validator';\nimport { startRegisterWithEmailPasswordName } from '../../actions/auth';\nexport const RegisterScreen = () => {\n  const dispatch = useDispatch();\n  const {\n    msgError\n  } = useSelector(state => state.ui);\n  const [formValues, handleInputChange] = useForm({\n    name: '',\n    email: '',\n    password: '',\n    password2: ''\n  });\n  const {\n    name,\n    email,\n    password,\n    password2\n  } = formValues;\n\n  const handleRegister = e => {\n    e.preventDefault();\n\n    if (isFormValid()) {\n      dispatch(startRegisterWithEmailPasswordName(email, password, name));\n    }\n  };\n\n  const isFormValid = () => {\n    if (name.trim().length === 0) {\n      //console.log('name is required')\n      dispatch(setError('name is required'));\n      return false;\n    } else if (!validator.isEmail(email)) {\n      //console.log('Email invalid')\n      dispatch(setError('Email invalid'));\n      return false;\n    } else if (password !== password2 || password.length <= 5) {\n      //console.log('Password should be at least 6 characters and match each other')\n      dispatch(setError('Password should be at least 6 characters and match each other'));\n      return false;\n    }\n\n    dispatch(removeError());\n    return true;\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, \"register\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"form animate__animated animate__fadeIn\",\n    onSubmit: handleRegister,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, msgError && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"auth__alert-error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, msgError), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"input\",\n    type: \"text\",\n    placeholder: \"Name\",\n    name: \"name\",\n    value: name,\n    autoComplete: \"off\",\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"input\",\n    type: \"text\",\n    placeholder: \"Email\",\n    name: \"email\",\n    value: email,\n    autoComplete: \"off\",\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"input\",\n    type: \"password\",\n    placeholder: \"Password\",\n    name: \"password\",\n    value: password,\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"input\",\n    type: \"password\",\n    placeholder: \"Confirm password\",\n    name: \"password2\",\n    value: password2,\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn pointer btn-block\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, \"Register\")), /*#__PURE__*/React.createElement(Link, {\n    className: \"link\",\n    to: \"/auth/login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }\n  }, \"Already registered?\"));\n};","map":{"version":3,"sources":["/home/juan/dev/portfolio/react-2/src/components/auth/RegisterScreen.js"],"names":["React","Link","useDispatch","useSelector","useForm","removeError","setError","validator","startRegisterWithEmailPasswordName","RegisterScreen","dispatch","msgError","state","ui","formValues","handleInputChange","name","email","password","password2","handleRegister","e","preventDefault","isFormValid","trim","length","isEmail"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Link} from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useForm } from '../../hooks/useForm';\nimport { removeError, setError } from '../../actions/ui';\nimport validator from 'validator'\nimport { startRegisterWithEmailPasswordName } from '../../actions/auth';\n\nexport const RegisterScreen = () => {\n\n  const dispatch = useDispatch()\n  const { msgError } = useSelector( state => state.ui );\n\n\n  const [formValues, handleInputChange] = useForm({\n    name: '',\n    email: '',\n    password: '',\n    password2: ''\n  })\n\n  const { name, email, password, password2 } = formValues;\n\n  const handleRegister = (e) => {\n    e.preventDefault();\n\n    if (isFormValid()) {\n      dispatch( startRegisterWithEmailPasswordName(email, password, name ))\n    }\n\n  }\n  \n  const isFormValid = () => {\n\n    if( name.trim().length === 0) {\n      //console.log('name is required')\n      dispatch( setError('name is required') )\n      return false\n    } else if ( !validator.isEmail( email ) ) {\n      //console.log('Email invalid')\n      dispatch( setError('Email invalid') )\n      return false;\n    } else if (password !== password2 || password.length <= 5 ) {\n      //console.log('Password should be at least 6 characters and match each other')\n      dispatch( setError('Password should be at least 6 characters and match each other') )\n      return false\n    }\n    dispatch( removeError())\n    return true\n  }\n\n  return (\n    <>\n      <h3 className='title'>register</h3>\n\n      <form className='form animate__animated animate__fadeIn' onSubmit={handleRegister}>\n\n        { (msgError) &&\n          <div className='auth__alert-error'>\n            {msgError}\n          </div>\n        }\n\n        <input\n          className='input'\n          type='text'\n          placeholder='Name'\n          name='name'\n          value= {name}\n          autoComplete='off'  \n          onChange={handleInputChange}    \n        />\n\n        <input\n          className='input'\n          type='text'\n          placeholder='Email'\n          name='email' \n          value= {email}\n          autoComplete='off' \n          onChange={handleInputChange}     \n        />\n\n        <input\n          className='input'\n          type='password'\n          placeholder='Password'\n          name='password'\n          value= {password}   \n          onChange={handleInputChange}     \n        />\n\n        <input\n          className='input'\n          type='password'\n          placeholder='Confirm password'\n          name='password2' \n          value= {password2}  \n          onChange={handleInputChange}     \n        />\n\n        <button \n          className='btn pointer btn-block'\n          type='submit'\n          \n        >\n          Register\n        </button>\n\n        \n        \n      </form>\n\n      <Link \n        className='link'\n        to='/auth/login'>Already registered?</Link>\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}