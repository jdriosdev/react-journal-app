{"ast":null,"code":"import _slicedToArray from\"/home/juan/dev/portfolio/react-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from'react';import{Link}from'react-router-dom';import{useDispatch,useSelector}from'react-redux';import{useForm}from'../../hooks/useForm';import{removeError,setError}from'../../actions/ui';import validator from'validator';import{startRegisterWithEmailPasswordName}from'../../actions/auth';export var RegisterScreen=function RegisterScreen(){var dispatch=useDispatch();var _useSelector=useSelector(function(state){return state.ui;}),msgError=_useSelector.msgError;var _useForm=useForm({name:'',email:'',password:'',password2:''}),_useForm2=_slicedToArray(_useForm,2),formValues=_useForm2[0],handleInputChange=_useForm2[1];var name=formValues.name,email=formValues.email,password=formValues.password,password2=formValues.password2;var handleRegister=function handleRegister(e){e.preventDefault();if(isFormValid()){dispatch(startRegisterWithEmailPasswordName(email,password,name));}};var isFormValid=function isFormValid(){if(name.trim().length===0){//console.log('name is required')\ndispatch(setError('name is required'));return false;}else if(!validator.isEmail(email)){//console.log('Email invalid')\ndispatch(setError('Email invalid'));return false;}else if(password!==password2||password.length<=5){//console.log('Password should be at least 6 characters and match each other')\ndispatch(setError('Password should be at least 6 characters and match each other'));return false;}dispatch(removeError());return true;};return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"h3\",{className:\"title\"},\"register\"),/*#__PURE__*/React.createElement(\"form\",{className:\"form animate__animated animate__fadeIn\",onSubmit:handleRegister},msgError&&/*#__PURE__*/React.createElement(\"div\",{className:\"auth__alert-error\"},msgError),/*#__PURE__*/React.createElement(\"input\",{className:\"input\",type:\"text\",placeholder:\"Name\",name:\"name\",value:name,autoComplete:\"off\",onChange:handleInputChange}),/*#__PURE__*/React.createElement(\"input\",{className:\"input\",type:\"text\",placeholder:\"Email\",name:\"email\",value:email,autoComplete:\"off\",onChange:handleInputChange}),/*#__PURE__*/React.createElement(\"input\",{className:\"input\",type:\"password\",placeholder:\"Password\",name:\"password\",value:password,onChange:handleInputChange}),/*#__PURE__*/React.createElement(\"input\",{className:\"input\",type:\"password\",placeholder:\"Confirm password\",name:\"password2\",value:password2,onChange:handleInputChange}),/*#__PURE__*/React.createElement(\"button\",{className:\"btn pointer btn-block\",type:\"submit\"},\"Register\")),/*#__PURE__*/React.createElement(Link,{className:\"link\",to:\"/auth/login\"},\"Already registered?\"));};","map":{"version":3,"sources":["/home/juan/dev/portfolio/react-2/src/components/auth/RegisterScreen.js"],"names":["React","Link","useDispatch","useSelector","useForm","removeError","setError","validator","startRegisterWithEmailPasswordName","RegisterScreen","dispatch","state","ui","msgError","name","email","password","password2","formValues","handleInputChange","handleRegister","e","preventDefault","isFormValid","trim","length","isEmail"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Link} from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useForm } from '../../hooks/useForm';\nimport { removeError, setError } from '../../actions/ui';\nimport validator from 'validator'\nimport { startRegisterWithEmailPasswordName } from '../../actions/auth';\n\nexport const RegisterScreen = () => {\n\n  const dispatch = useDispatch()\n  const { msgError } = useSelector( state => state.ui );\n\n\n  const [formValues, handleInputChange] = useForm({\n    name: '',\n    email: '',\n    password: '',\n    password2: ''\n  })\n\n  const { name, email, password, password2 } = formValues;\n\n  const handleRegister = (e) => {\n    e.preventDefault();\n\n    if (isFormValid()) {\n      dispatch( startRegisterWithEmailPasswordName(email, password, name ))\n    }\n\n  }\n  \n  const isFormValid = () => {\n\n    if( name.trim().length === 0) {\n      //console.log('name is required')\n      dispatch( setError('name is required') )\n      return false\n    } else if ( !validator.isEmail( email ) ) {\n      //console.log('Email invalid')\n      dispatch( setError('Email invalid') )\n      return false;\n    } else if (password !== password2 || password.length <= 5 ) {\n      //console.log('Password should be at least 6 characters and match each other')\n      dispatch( setError('Password should be at least 6 characters and match each other') )\n      return false\n    }\n    dispatch( removeError())\n    return true\n  }\n\n  return (\n    <>\n      <h3 className='title'>register</h3>\n\n      <form className='form animate__animated animate__fadeIn' onSubmit={handleRegister}>\n\n        { (msgError) &&\n          <div className='auth__alert-error'>\n            {msgError}\n          </div>\n        }\n\n        <input\n          className='input'\n          type='text'\n          placeholder='Name'\n          name='name'\n          value= {name}\n          autoComplete='off'  \n          onChange={handleInputChange}    \n        />\n\n        <input\n          className='input'\n          type='text'\n          placeholder='Email'\n          name='email' \n          value= {email}\n          autoComplete='off' \n          onChange={handleInputChange}     \n        />\n\n        <input\n          className='input'\n          type='password'\n          placeholder='Password'\n          name='password'\n          value= {password}   \n          onChange={handleInputChange}     \n        />\n\n        <input\n          className='input'\n          type='password'\n          placeholder='Confirm password'\n          name='password2' \n          value= {password2}  \n          onChange={handleInputChange}     \n        />\n\n        <button \n          className='btn pointer btn-block'\n          type='submit'\n          \n        >\n          Register\n        </button>\n\n        \n        \n      </form>\n\n      <Link \n        className='link'\n        to='/auth/login'>Already registered?</Link>\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}