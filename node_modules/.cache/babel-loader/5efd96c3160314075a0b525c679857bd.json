{"ast":null,"code":"import Swal from 'sweetalert2';\nimport { types } from \"../types/types\";\nimport { firebase, googleAuthProvider } from '../firebase/firebase-config';\nimport { finishLoading, startLoading } from \"./ui\";\nimport { noteLogout } from './notes';\nexport const startLoginEmailPassword = (email, password) => {\n  return dispatch => {\n    dispatch(startLoading());\n    firebase.auth().signInWithEmailAndPassword(email, password).then(({\n      user\n    }) => {\n      dispatch(login(user.uid, user.displayName));\n      dispatch(finishLoading());\n    }).catch(e => {\n      dispatch(finishLoading());\n      Swal.fire('Opss!', e.message, 'error');\n    });\n  };\n};\nexport const startRegisterWithEmailPasswordName = (email, password, name) => {\n  return dispatch => {\n    firebase.auth().createUserWithEmailAndPassword(email, password).then(async ({\n      user\n    }) => {\n      await user.updateProfile({\n        displayName: name\n      });\n      console.log(user);\n      dispatch(login(user.uid, user.displayName));\n    }).catch(e => {\n      Swal.fire('Opss!', e.message, 'error');\n    });\n  };\n};\nexport const startGoogleLogin = () => {\n  return dispatch => {\n    firebase.auth().signInWithPopup(googleAuthProvider).then(({\n      user\n    }) => {\n      dispatch(login(user.uid, user.displayName));\n    });\n  };\n};\nexport const login = (uid, displayName) => {\n  return {\n    type: types.login,\n    payload: {\n      uid,\n      displayName\n    }\n  };\n};\nexport const startLogout = () => {\n  return async dispatch => {\n    await firebase.auth().signOut();\n    dispatch(logout());\n    dispatch(noteLogout());\n  };\n};\nexport const logout = () => ({\n  type: types.logout\n});","map":{"version":3,"sources":["/home/juan/dev/portfolio/react-2/src/actions/auth.js"],"names":["Swal","types","firebase","googleAuthProvider","finishLoading","startLoading","noteLogout","startLoginEmailPassword","email","password","dispatch","auth","signInWithEmailAndPassword","then","user","login","uid","displayName","catch","e","fire","message","startRegisterWithEmailPasswordName","name","createUserWithEmailAndPassword","updateProfile","console","log","startGoogleLogin","signInWithPopup","type","payload","startLogout","signOut","logout"],"mappings":"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","sourcesContent":["import Swal from 'sweetalert2';\n\nimport { types } from \"../types/types\"\nimport { firebase, googleAuthProvider } from '../firebase/firebase-config'\nimport { finishLoading, startLoading } from \"./ui\"\nimport { noteLogout } from './notes';\n\n\nexport const startLoginEmailPassword = (email, password) => {\n  return (dispatch) => {\n    \n    dispatch(startLoading())\n\n    firebase.auth().signInWithEmailAndPassword(email, password)\n      .then(({user})=> {\n        dispatch(login(user.uid, user.displayName));\n        dispatch(finishLoading())\n      })\n      .catch(e => {\n        dispatch(finishLoading())\n        Swal.fire('Opss!', e.message, 'error');\n      })\n  }\n}\n\nexport const startRegisterWithEmailPasswordName = ( email, password, name) => {\n  return ( dispatch ) => {\n    firebase.auth().createUserWithEmailAndPassword(email, password)\n    .then( async({user}) => {\n\n      await user.updateProfile({displayName: name})\n\n      console.log(user)\n      dispatch(\n        login( user.uid, user.displayName)\n      )\n    }).catch( e => {\n      Swal.fire('Opss!', e.message, 'error');\n    })\n  }\n}\n\nexport const startGoogleLogin = () => {\n  return (dispatch) => {\n    firebase.auth().signInWithPopup( googleAuthProvider )\n      .then( ({user}) => {\n        dispatch(\n          login( user.uid, user.displayName)\n        )\n      })\n  }\n}\n\n\nexport const login = (uid, displayName) => {\n  return {\n    type: types.login,\n    payload: {\n      uid,\n      displayName \n    }\n  }\n}\n\nexport const startLogout = () => {\n  return async ( dispatch ) => {\n    await firebase.auth().signOut();\n    \n    dispatch( logout() )\n    dispatch( noteLogout() )\n  }\n}\n\nexport const logout = () => ({\n  type: types.logout\n})\n\n"]},"metadata":{},"sourceType":"module"}