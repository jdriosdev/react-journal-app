{"ast":null,"code":"import Swal from 'sweetalert2';\nimport { db } from '../firebase/firebase-config';\nimport { fileUpload } from '../helpers/fileUpload';\nimport { loadNotes } from '../helpers/loadNotes';\nimport { types } from '../types/types';\nexport const startNewNote = () => {\n  return async (dispatch, getState) => {\n    const {\n      uid\n    } = getState().auth;\n    const newNote = {\n      title: '',\n      body: '',\n      date: new Date().getTime()\n    };\n    const doc = await db.collection(`${uid}/journal/notes`).add(newNote);\n    dispatch(activeNote(doc.id, newNote));\n    dispatch(addNewNote(doc.id, newNote));\n  };\n};\nexport const activeNote = (id, note) => ({\n  type: types.notesActive,\n  payload: {\n    id,\n    ...note\n  }\n});\nexport const addNewNote = (id, note) => ({\n  type: types.notesAddNew,\n  payload: {\n    id,\n    ...note\n  }\n});\nexport const startLoadingNotes = uid => {\n  return async dispatch => {\n    const notes = await loadNotes(uid);\n    dispatch(setNotes(notes));\n  };\n};\nexport const setNotes = notes => ({\n  type: types.notesLoad,\n  payload: notes\n});\nexport const startSaveNote = note => {\n  return async (dispatch, getState) => {\n    const {\n      uid\n    } = getState().auth;\n\n    if (!note.url) {\n      delete note.url;\n    }\n\n    const noteToFirestore = { ...note\n    };\n    delete noteToFirestore.id;\n    await db.doc(`${uid}/journal/notes/${note.id}`).update(noteToFirestore);\n    dispatch(refreshNote(note.id, noteToFirestore));\n    Swal.fire('Saved', note.title, 'success');\n  };\n};\nexport const refreshNote = (id, note) => ({\n  type: types.notesUpdated,\n  payload: {\n    id,\n    note: {\n      id,\n      ...note\n    }\n  }\n}); //cloudinary\n//react-journal\n\nexport const startUploading = file => {\n  return async (dispatch, getState) => {\n    const {\n      active: activeNote\n    } = getState().notes;\n    Swal.fire({\n      title: 'Uploading...',\n      text: 'Please wait...',\n      allowOutsideClick: false,\n      willOpen: () => {\n        Swal.showLoading();\n      }\n    });\n    const fileUrl = await fileUpload(file);\n    activeNote.url = fileUrl;\n    dispatch(startSaveNote(activeNote));\n    Swal.close();\n  };\n};\nexport const startDeleting = id => {\n  return async (dispatch, getState) => {\n    const uid = getState().auth.uid;\n    await db.doc(`${uid}/journal/notes/${id}`).delete();\n    dispatch(deleteNote(id));\n  };\n};\nexport const deleteNote = id => ({\n  type: types.notesDelete,\n  payload: id\n} //Swal.fire('')\n);\nexport const noteLogout = () => ({\n  type: types.notesLogoutCleaning\n});","map":{"version":3,"sources":["/home/juan/dev/portfolio/react-2/src/actions/notes.js"],"names":["Swal","db","fileUpload","loadNotes","types","startNewNote","dispatch","getState","uid","auth","newNote","title","body","date","Date","getTime","doc","collection","add","activeNote","id","addNewNote","note","type","notesActive","payload","notesAddNew","startLoadingNotes","notes","setNotes","notesLoad","startSaveNote","url","noteToFirestore","update","refreshNote","fire","notesUpdated","startUploading","file","active","text","allowOutsideClick","willOpen","showLoading","fileUrl","close","startDeleting","delete","deleteNote","notesDelete","noteLogout","notesLogoutCleaning"],"mappings":"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","sourcesContent":["import Swal from 'sweetalert2';\n\nimport { db } from '../firebase/firebase-config';\nimport { fileUpload } from '../helpers/fileUpload';\nimport { loadNotes } from '../helpers/loadNotes';\nimport { types } from '../types/types';\n\n\n\nexport const startNewNote = () => {\n  return async(dispatch, getState) => {\n    const {uid} = getState().auth;\n    \n    const newNote = {\n      title: '',\n      body: '',\n      date: new Date().getTime()\n    }\n\n    const doc = await db.collection(`${uid}/journal/notes`).add(newNote)\n    \n    dispatch (activeNote(doc.id, newNote));\n    dispatch (addNewNote(doc.id, newNote ));\n  }\n}\n\nexport const activeNote = (id, note) => ({\n  type: types.notesActive,\n  payload: {\n    id,\n    ...note\n  }\n});\n\nexport const addNewNote = (id, note) => ({\n  type: types.notesAddNew,\n  payload: {\n    id,\n    ...note\n  }\n})\n\n\nexport const startLoadingNotes = (uid) => {\n  return async ( dispatch ) => {\n    const notes = await loadNotes(uid)\n    dispatch(setNotes(notes))\n  }\n}\n\nexport const setNotes = (notes) => ({\n  type: types.notesLoad,\n  payload: notes\n});\n\nexport const startSaveNote = (note) => {\n  return async (dispatch, getState) => {\n    const {uid} = getState().auth;\n\n    if(!note.url) {\n      delete note.url;\n    }\n\n    const noteToFirestore = {...note};\n    delete noteToFirestore.id;\n\n    await db.doc(`${uid}/journal/notes/${note.id}`).update(noteToFirestore);\n    \n    dispatch(refreshNote(note.id, noteToFirestore))\n    Swal.fire('Saved', note.title, 'success')\n  }\n}\n\nexport const refreshNote = ( id, note) => ({\n  type: types.notesUpdated,\n  payload: {\n    id, \n    note: {\n      id, \n      ...note\n    }\n  }\n})\n//cloudinary\n//react-journal\n\nexport const startUploading =  (file) => {\n  return async( dispatch, getState ) => {\n\n    const {active:activeNote} = getState().notes;\n\n    Swal.fire({\n      title: 'Uploading...',\n      text: 'Please wait...',\n      allowOutsideClick: false,\n      willOpen: () => {\n        Swal.showLoading();\n      }\n    })\n\n    const fileUrl = await fileUpload(file)\n    activeNote.url = fileUrl\n\n    dispatch(startSaveNote(activeNote))\n\n    Swal.close()\n  }\n}\n\nexport const startDeleting = (id) => {\n  return async(dispatch, getState) => {\n    const uid = getState().auth.uid;\n    await db.doc(`${uid}/journal/notes/${id}`).delete();\n\n    dispatch(deleteNote(id));\n\n  }\n} \n\nexport const deleteNote = (id) => ({\n  type: types.notesDelete,\n  payload: id\n}\n  //Swal.fire('')\n)\n\nexport const noteLogout = () => ({\n  type: types.notesLogoutCleaning\n})"]},"metadata":{},"sourceType":"module"}