{"version":3,"sources":["types/types.js","reducers/notesReducer.js","reducers/uiReducer.js","store/store.js","reducers/authReducer.js","firebase/firebase-config.js","helpers/fileUpload.js","helpers/loadNotes.js","actions/notes.js","components/notes/NotesAppBar.js","hooks/useForm.js","components/notes/NoteScreen.js","components/journal/NothingSelected.js","actions/ui.js","actions/auth.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","components/journal/Sidebar.js","components/journal/JournalScreen.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","routers/AuthRouter.js","routers/PublicRoute.js","routers/PrivateRoute.js","routers/AppRouter.js","JournalApp.js","index.js"],"names":["types","initialState","notes","active","loading","msgError","reducers","combineReducers","auth","state","action","type","uid","payload","name","displayName","ui","map","note","id","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","firestore","googleAuthProvider","GoogleAuthProvider","fileUpload","file","a","formData","FormData","append","fetch","method","body","resp","ok","json","cloudResp","secure_url","loadNotes","collection","get","notesSnap","forEach","snapHijo","push","data","activeNote","addNewNote","startLoadingNotes","dispatch","setNotes","startSaveNote","getState","url","noteToFirestore","doc","update","refreshNote","Swal","fire","title","deleteNote","NotesAppBar","useDispatch","useSelector","className","style","display","onChange","e","target","files","text","allowOutsideClick","willOpen","showLoading","fileUrl","close","startUploading","onClick","document","querySelector","click","useForm","useState","values","setValues","reset","newFormState","handleInputChange","value","NoteScreen","formValues","activeId","useRef","useEffect","current","placeholder","autoComplete","src","alt","delete","startDeleting","NothingSelected","setError","err","finishLoading","startLoginEmailPassword","email","password","signInWithEmailAndPassword","then","user","login","catch","message","logout","JournalEntry","date","noteDate","moment","backgroundSize","backgroundImage","format","JournalEntries","key","Sidebar","signOut","newNote","Date","getTime","add","JournalScreen","LoginScreen","onSubmit","preventDefault","disabled","signInWithPopup","to","RegisterScreen","password2","isFormValid","trim","length","validator","isEmail","createUserWithEmailAndPassword","updateProfile","console","log","startRegisterWithEmailPasswordName","AuthRouter","exact","path","component","PublicRoute","isAuth","Component","rest","props","PrivateRoute","AppRouter","checking","setChecking","isLoggedIn","setIsLoggedIn","onAuthStateChanged","JournalApp","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.9975b055.chunk.js","sourcesContent":["export const types = {\n\n  login: '[Auth] Login',  \n  logout: '[Auth] Logout',\n\n  uiSetError: '[UI] Set Error',\n  uiRemoveError: '[UI] Remove Error',\n\n  uiStartLoading: '[UI] Start loading',\n  uiFinishLoading: '[UI] Finish loading',\n\n  notesAddNew: '[Notes] new note',\n  notesActive: '[Notes] active note',\n  notesLoad: '[Notes] Load note ',\n  notesUpdated: '[Notes] Update note ',\n  notesFileUrl: '[Notes] Update image url',\n  notesDelete: '[Notes] Delete note',\n  notesLogoutCleaning: '[Notes] Logout Cleaning',\n}","/*\n  {\n    notes: [],\n    active: null,\n    active: {\n      id: sdasdgqr2435dfs,\n      title:'',\n      bodu:'',\n      imageUrl: '',\n      date: 1231234234,\n    }\n  }\n*/\n\nimport { types } from \"../types/types\";\n\nconst initialState = {\n  notes: [],\n  active: null\n}\n\nexport const notesReducer = ( state= initialState, action ) => {\n\n  switch (action.type) {\n    case types.notesActive:\n      return {\n        ...state,\n        active: {\n          ...action.payload\n        }\n      }\n\n    case types.notesAddNew:\n      return {\n        ...state,\n        notes: [action.payload, ...state.notes ] \n      }\n    \n    case types.notesLoad:\n        return {\n          ...state,\n          notes: [...action.payload]\n        }\n    \n    case types.notesUpdated:\n        return {\n          ...state,\n          notes: state.notes.map(\n            note => note.id === action.payload.id\n              ? action.payload.note\n              : note\n          )\n        }\n\n      case types.notesDelete:\n        return{\n          ...state,\n          active: null,\n          notes: state.notes.filter( note => note.id !== action.payload)\n        }\n\n      case types.notesLogoutCleaning:\n        return{\n          ...state,\n          active: null,\n          notes:[]\n        }\n      \n  \n    default:\n      return state;\n  }\n\n}","import { types } from \"../types/types\";\n\nconst initialState = {\n  loading: false,\n  msgError: null\n}\n\nexport const uiReducer = ( state = initialState, action) => {\n  switch (action.type) {\n    case types.uiSetError:\n      return {\n        ...state,\n        msgError: action.payload\n      }\n\n    case types.uiRemoveError:\n      return {\n        ...state,\n        msgError: null\n      }\n\n    case types.uiStartLoading:\n      return {\n        ...state,\n        loading: true\n      }\n\n    case types.uiFinishLoading:\n      return {\n        ...state,\n        loading: false\n      }\n\n  \n    default:\n      return state;\n  }\n}","import {createStore, combineReducers, applyMiddleware, compose} from 'redux';\nimport thunk from 'redux-thunk';\nimport { authReducer } from '../reducers/authReducer';\nimport { notesReducer } from '../reducers/notesReducer';\nimport { uiReducer } from '../reducers/uiReducer';\n\n\n//Aqui esta el core de redux, importo todos los reducers\n//con combineReducers({}) los uno todos\nconst reducers = combineReducers({\n  auth: authReducer,\n  ui: uiReducer,\n  notes: notesReducer\n})\n\nconst composeEnhancers = (typeof window !== 'undefined' \n  && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\n//la union de todos mis reducers la paso a mi createStore(reducers) \n\nexport const store = createStore(\n  reducers,\n  composeEnhancers(\n    applyMiddleware(thunk)\n  )\n)","import { types } from \"../types/types\";\n\nexport const authReducer = ( state={}, action) => {\n  switch (action.type) {\n    case types.login:\n      return {\n        uid: action.payload.uid,\n        name: action.payload.displayName\n      }\n\n    case types.logout:\n      return {}\n    \n      \n  \n    default:\n      return state;\n  }\n}","import firebase from \"firebase/app\";\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDozWRkvG4kmc-RkAviIb468AVFvEtjz_Q\",\n  authDomain: \"journal-app-react-97b8d.firebaseapp.com\",\n  databaseURL: \"https://journal-app-react-97b8d.firebaseio.com\",\n  projectId: \"journal-app-react-97b8d\",\n  storageBucket: \"journal-app-react-97b8d.appspot.com\",\n  messagingSenderId: \"628113352005\",\n  appId: \"1:628113352005:web:79ea62560432947a864a2c\"\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nconst db = firebase.firestore();\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\n\nexport {\n  db,\n  googleAuthProvider,\n  firebase\n}","export const fileUpload= async ( file ) => {\n  \n  const cloudUrl = 'https://api.cloudinary.com/v1_1/djcsouoma/upload';\n\n  const formData = new FormData();\n  formData.append('upload_preset','react-journal')\n  formData.append('file',file)\n\n  try {\n    const resp = await fetch( cloudUrl, {\n      method: 'POST',\n      body: formData\n    } );\n\n    if ( resp.ok ) {\n      const cloudResp = await resp.json();\n      return cloudResp.secure_url;\n    } else {\n      throw await resp.json()\n    }\n  } catch (error) {\n    throw error\n  }\n\n}","import { db } from '../firebase/firebase-config'\n\nexport const loadNotes = async ( uid ) => {\n\n  const notesSnap = await db.collection(`${uid}/journal/notes`).get()\n  const notes = [];\n\n  notesSnap.forEach( snapHijo => {\n    notes.push({\n      id: snapHijo.id,\n      ...snapHijo.data()\n    })\n  });\n\n  return notes;\n\n}","import Swal from 'sweetalert2';\n\nimport { db } from '../firebase/firebase-config';\nimport { fileUpload } from '../helpers/fileUpload';\nimport { loadNotes } from '../helpers/loadNotes';\nimport { types } from '../types/types';\n\n\n\nexport const startNewNote = () => {\n  return async(dispatch, getState) => {\n    const {uid} = getState().auth;\n    \n    const newNote = {\n      title: '',\n      body: '',\n      date: new Date().getTime()\n    }\n\n    const doc = await db.collection(`${uid}/journal/notes`).add(newNote)\n    \n    dispatch (activeNote(doc.id, newNote));\n    dispatch (addNewNote(doc.id, newNote ));\n  }\n}\n\nexport const activeNote = (id, note) => ({\n  type: types.notesActive,\n  payload: {\n    id,\n    ...note\n  }\n});\n\nexport const addNewNote = (id, note) => ({\n  type: types.notesAddNew,\n  payload: {\n    id,\n    ...note\n  }\n})\n\n\nexport const startLoadingNotes = (uid) => {\n  return async ( dispatch ) => {\n    const notes = await loadNotes(uid)\n    dispatch(setNotes(notes))\n  }\n}\n\nexport const setNotes = (notes) => ({\n  type: types.notesLoad,\n  payload: notes\n});\n\nexport const startSaveNote = (note) => {\n  return async (dispatch, getState) => {\n    const {uid} = getState().auth;\n\n    if(!note.url) {\n      delete note.url;\n    }\n\n    const noteToFirestore = {...note};\n    delete noteToFirestore.id;\n\n    await db.doc(`${uid}/journal/notes/${note.id}`).update(noteToFirestore);\n    \n    dispatch(refreshNote(note.id, noteToFirestore))\n    Swal.fire('Saved', note.title, 'success')\n  }\n}\n\nexport const refreshNote = ( id, note) => ({\n  type: types.notesUpdated,\n  payload: {\n    id, \n    note: {\n      id, \n      ...note\n    }\n  }\n})\n//cloudinary\n//react-journal\n\nexport const startUploading =  (file) => {\n  return async( dispatch, getState ) => {\n\n    const {active:activeNote} = getState().notes;\n\n    Swal.fire({\n      title: 'Uploading...',\n      text: 'Please wait...',\n      allowOutsideClick: false,\n      willOpen: () => {\n        Swal.showLoading();\n      }\n    })\n\n    const fileUrl = await fileUpload(file)\n    activeNote.url = fileUrl\n\n    dispatch(startSaveNote(activeNote))\n\n    Swal.close()\n  }\n}\n\nexport const startDeleting = (id) => {\n  return async(dispatch, getState) => {\n    const uid = getState().auth.uid;\n    await db.doc(`${uid}/journal/notes/${id}`).delete();\n\n    dispatch(deleteNote(id));\n\n  }\n} \n\nexport const deleteNote = (id) => ({\n  type: types.notesDelete,\n  payload: id\n}\n  //Swal.fire('')\n)\n\nexport const noteLogout = () => ({\n  type: types.notesLogoutCleaning\n})","import React from 'react'\nimport { startSaveNote, startUploading } from '../../actions/notes';\nimport { useDispatch, useSelector } from 'react-redux';\n\nexport const NotesAppBar = () => {\n\n  const dispatch = useDispatch()\n  const {active} = useSelector(state => state.notes)\n\n  const handleSave = () => {\n    dispatch(startSaveNote(active))\n  } \n\n  const handlePictureClick = () => {\n    document.querySelector('#fileSelector').click()\n  }\n\n  const handleFileChange = (e) => {\n    const file = e.target.files[0]\n    if (file){\n      dispatch(startUploading(file))\n    }\n  }\n\n  return (\n    <div className='notes__appbar'>\n      <span>25 de mayo 2020</span>\n      <input \n        id='fileSelector'\n        type='file'\n        name='file'\n        style={{display: 'none'}}\n        onChange={handleFileChange}\n      />\n      <div>\n        <button\n          className='btn' \n          onClick={handlePictureClick} \n        >\n          Picture\n        </button>\n        <button\n          className='btn'\n          onClick={handleSave}\n        >\n          Save\n        </button>\n      </div>\n    </div>\n  )\n}\n","import  { useState } from 'react'\n\nexport const useForm = (initialState={}) => {\n  \n  const [values, setValues] = useState(initialState);\n\n  const reset = (newFormState = initialState) => {\n    setValues( newFormState)\n  }\n\n  const handleInputChange = ({target}) => {\n    setValues({\n      ...values,\n      [target.name]: target.value\n    });\n  } \n\n  return [values, handleInputChange, reset]\n\n}","import React, { useEffect, useRef }  from 'react'\nimport { NotesAppBar } from './NotesAppBar'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useForm } from '../../hooks/useForm';\nimport { activeNote, startDeleting } from '../../actions/notes';\n\n\n\nexport const NoteScreen = () => {\n\n  const dispatch = useDispatch()\n\n  const {active:note} = useSelector(state => state.notes)\n  const [formValues, handleInputChange, reset] = useForm(note);\n  const { body, title, id } = formValues;\n\n  const activeId = useRef(note.id)\n\n  useEffect(() => {\n    \n    if (note.id !== activeId.current) {\n      reset(note);\n      activeId.current = note.id\n    }\n\n  }, [note, reset])\n\n  useEffect(()=> {\n    dispatch(activeNote( formValues.id, {...formValues} ))\n  }, [formValues, dispatch])\n\n  const handleDelete = () => {\n    dispatch(startDeleting(id));\n  }\n\n  return (\n    <div className='notes__main-content'>\n      <NotesAppBar />\n\n      <div className='notes__content'>\n        <input \n          type='text'\n          placeholder='Some awesome title'\n          autoComplete='off'\n          className='input notes__title-input'\n          name='title'\n          value={title}\n          onChange={handleInputChange}\n        />\n\n        <textarea\n          placeholder='What happened today?'\n          className='notes__textarea'\n          name='body'\n          value={body}\n          onChange={handleInputChange}\n        >\n        </textarea>\n\n        \n          {\n            (note.url) &&\n            <div \n          className='notes__image'\n          >\n              <img \n                src={note.url}\n                alt={note.title}\n              />\n            </div>\n          }\n\n\n\n      </div>\n      <button\n        className='btn btn-danger'\n        onClick={handleDelete}\n      >\n        Delete\n      </button>\n    </div>\n  )\n}\n","import React from 'react'\n\nexport const NothingSelected = () => {\n  return (\n    <div className='nothing__main-content'>\n      <p>\n        Select something \n        <br />\n        or create an entry!\n      </p>\n\n      <i className='far fa-star fa-4x mt-5' />\n    </div>\n  )\n}\n","import { types } from \"../types/types\";\n\n\nexport const setError = ( err ) => ({\n  type: types.uiSetError,\n  payload: err\n});\n\nexport const removeError = () => ({\n  type: types.uiRemoveError\n});\n\nexport const startLoading = () => ({\n  type: types.uiStartLoading\n});\n\nexport const finishLoading = () => ({\n  type: types.uiFinishLoading\n});\n\n","import Swal from 'sweetalert2';\n\nimport { types } from \"../types/types\"\nimport { firebase, googleAuthProvider } from '../firebase/firebase-config'\nimport { finishLoading, startLoading } from \"./ui\"\nimport { noteLogout } from './notes';\n\n\nexport const startLoginEmailPassword = (email, password) => {\n  return (dispatch) => {\n    \n    dispatch(startLoading())\n\n    firebase.auth().signInWithEmailAndPassword(email, password)\n      .then(({user})=> {\n        dispatch(login(user.uid, user.displayName));\n        dispatch(finishLoading())\n      })\n      .catch(e => {\n        dispatch(finishLoading())\n        Swal.fire('Opss!', e.message, 'error');\n      })\n  }\n}\n\nexport const startRegisterWithEmailPasswordName = ( email, password, name) => {\n  return ( dispatch ) => {\n    firebase.auth().createUserWithEmailAndPassword(email, password)\n    .then( async({user}) => {\n\n      await user.updateProfile({displayName: name})\n\n      console.log(user)\n      dispatch(\n        login( user.uid, user.displayName)\n      )\n    }).catch( e => {\n      Swal.fire('Opss!', e.message, 'error');\n    })\n  }\n}\n\nexport const startGoogleLogin = () => {\n  return (dispatch) => {\n    firebase.auth().signInWithPopup( googleAuthProvider )\n      .then( ({user}) => {\n        dispatch(\n          login( user.uid, user.displayName)\n        )\n      })\n  }\n}\n\n\nexport const login = (uid, displayName) => {\n  return {\n    type: types.login,\n    payload: {\n      uid,\n      displayName \n    }\n  }\n}\n\nexport const startLogout = () => {\n  return async ( dispatch ) => {\n    await firebase.auth().signOut();\n    \n    dispatch( logout() )\n    dispatch( noteLogout() )\n  }\n}\n\nexport const logout = () => ({\n  type: types.logout\n})\n\n","import React from 'react';\nimport moment from 'moment';\nimport { activeNote } from '../../actions/notes';\nimport { useDispatch } from 'react-redux';\n\nexport const JournalEntry = ({ id, title, date, body, url }) => {\n  \n    const noteDate = moment(date)\n\n    const dispatch = useDispatch()\n\n    const handleEntryClick = () => {\n      dispatch(activeNote(id, {title, date, body, url}))\n    }\n  \n  return (\n    <div className='journal__entry pointer animate__animated animate__fadeIn'\n      onClick={handleEntryClick}>\n        <div className='journal__entries--helper'> \n        { (url) &&\n          <div \n            className='journal__entry-picture'\n            style={{\n              backgroundSize:'cover',\n              backgroundImage: `url(${url})`\n            }}  \n          >        \n          </div>\n        }\n\n        <div className='journal__entry-body'>\n          <p className='journal__entry-title'><b>{title}</b></p>\n          <p className='journal__entry-content'>{body}</p>\n        </div>\n\n        </div>\n      <div className='journal__entry-date-box'> \n        <span>{noteDate.format('dddd')}</span>\n        <h4>{noteDate.format('Do')}</h4>\n      </div>\n\n    </div>\n  )\n}\n","import React from 'react'\nimport { JournalEntry } from './JournalEntry';\nimport { useSelector } from 'react-redux';\n\nexport const JournalEntries = () => {\n\n\n  const {notes} = useSelector(state => state.notes)\n\n  return (\n    <div className='journal__entries'>\n      {\n        notes.map(note => (\n          <JournalEntry\n            key={note.id}\n            {...note}\n          />\n        ))\n      }\n    </div>\n  )\n}\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { startLogout } from '../../actions/auth';\nimport { startNewNote } from '../../actions/notes';\nimport { JournalEntries } from './JournalEntries';\n\nexport const Sidebar = () => {\n\n  const { name } = useSelector(state => state.auth)\n\n  const dispatch = useDispatch()\n\n  const handleLogout = () => {\n    dispatch( startLogout() );\n    //dispatch( logoutCleaning() );\n  }\n\n  const handleAddNew = () => {\n    dispatch( startNewNote() )\n  }\n\n\n  return (\n    <aside className='journal__sidebar'>\n      <div className='journal__sidebar-navbar'>\n        <h3 className=''>\n          <i className='far fa-moon'/>\n          <span>\n            {name}\n          </span>\n        </h3>\n        <button\n          className='btn'\n          onClick={handleLogout}\n        >\n          Logout\n        </button>\n      </div>\n      <div \n        className='journal__new-entry'\n        onClick={handleAddNew}\n      >\n        \n        <i className='far fa-calendar-plus fa-5x'/>\n        <p className='mt-5'>New entry</p>\n      </div>\n      <JournalEntries />\n    </aside>\n  )\n}\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { NoteScreen } from '../notes/NoteScreen'\nimport { NothingSelected } from './NothingSelected'\nimport { Sidebar } from './Sidebar'\n\n\nexport const JournalScreen = () => {\n\n  const {active} = useSelector(state => state.notes)\n\n  return (\n    <div className='journal__main-content animate__animated animate__fadeIn animate__faster'>\n      <Sidebar />\n\n      <main>\n        {\n          (active)\n          ? <NoteScreen />\n          : <NothingSelected /> \n        }\n\n      </main>\n\n    </div>\n    \n  )\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useForm } from '../../hooks/useForm';\nimport { startGoogleLogin, startLoginEmailPassword } from '../../actions/auth';\n\nexport const LoginScreen = () => {\n\n  const dispatch = useDispatch()\n  const { loading } = useSelector(state => state.ui)\n\n  const [formValues, handleInputChange] = useForm({\n    email: '',\n    password: ''\n  })\n\n  const {email, password} = formValues\n\n  const handleLogin = (e) => {\n    e.preventDefault();\n\n    dispatch( startLoginEmailPassword(email,  password) )\n  }\n\n  const handleGoogleLogin = () => {\n    dispatch(startGoogleLogin() )\n  }\n\n  return (\n    <>\n      <h3 className='title'>Login</h3>\n\n      <form className='form animate__animated animate__fadeIn' onSubmit={handleLogin}>\n\n        <input\n          className='input'\n          type='text'\n          placeholder='Email'\n          name='email' \n          autoComplete='off'\n          value={email}\n          onChange={handleInputChange}\n        />\n\n        <input\n          className='input'\n          type='password'\n          placeholder='password'\n          name='password'\n          value={password}   \n          onChange={handleInputChange}    \n        />\n        \n        <button \n          className='btn pointer btn-block'\n          type='submit'\n          disabled={ loading }\n        >\n          Login\n        </button>\n\n        \n        <div \n          className=\"google-btn\"\n          onClick={handleGoogleLogin}\n        >\n          <div className=\"google-icon-wrapper\">\n              <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\n          </div>\n            <p className=\"btn-text\">\n                <b>Sign in with google</b>\n            </p>\n          </div>\n      </form>\n\n      <Link \n        className='link'\n        to='/auth/register'>Create an account</Link>\n    </>\n  )\n}\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useForm } from '../../hooks/useForm';\nimport { removeError, setError } from '../../actions/ui';\nimport validator from 'validator'\nimport { startRegisterWithEmailPasswordName } from '../../actions/auth';\n\nexport const RegisterScreen = () => {\n\n  const dispatch = useDispatch()\n  const { msgError } = useSelector( state => state.ui );\n\n\n  const [formValues, handleInputChange] = useForm({\n    name: '',\n    email: '',\n    password: '',\n    password2: ''\n  })\n\n  const { name, email, password, password2 } = formValues;\n\n  const handleRegister = (e) => {\n    e.preventDefault();\n\n    if (isFormValid()) {\n      dispatch( startRegisterWithEmailPasswordName(email, password, name ))\n    }\n\n  }\n  \n  const isFormValid = () => {\n\n    if( name.trim().length === 0) {\n      //console.log('name is required')\n      dispatch( setError('name is required') )\n      return false\n    } else if ( !validator.isEmail( email ) ) {\n      //console.log('Email invalid')\n      dispatch( setError('Email invalid') )\n      return false;\n    } else if (password !== password2 || password.length <= 5 ) {\n      //console.log('Password should be at least 6 characters and match each other')\n      dispatch( setError('Password should be at least 6 characters and match each other') )\n      return false\n    }\n    dispatch( removeError())\n    return true\n  }\n\n  return (\n    <>\n      <h3 className='title'>register</h3>\n\n      <form className='form animate__animated animate__fadeIn' onSubmit={handleRegister}>\n\n        { (msgError) &&\n          <div className='auth__alert-error'>\n            {msgError}\n          </div>\n        }\n\n        <input\n          className='input'\n          type='text'\n          placeholder='Name'\n          name='name'\n          value= {name}\n          autoComplete='off'  \n          onChange={handleInputChange}    \n        />\n\n        <input\n          className='input'\n          type='text'\n          placeholder='Email'\n          name='email' \n          value= {email}\n          autoComplete='off' \n          onChange={handleInputChange}     \n        />\n\n        <input\n          className='input'\n          type='password'\n          placeholder='Password'\n          name='password'\n          value= {password}   \n          onChange={handleInputChange}     \n        />\n\n        <input\n          className='input'\n          type='password'\n          placeholder='Confirm password'\n          name='password2' \n          value= {password2}  \n          onChange={handleInputChange}     \n        />\n\n        <button \n          className='btn pointer btn-block'\n          type='submit'\n          \n        >\n          Register\n        </button>\n\n        \n        \n      </form>\n\n      <Link \n        className='link'\n        to='/auth/login'>Already registered?</Link>\n    </>\n  )\n}\n","import React from 'react'\nimport {\n  Switch,\n  Route,\n  Redirect\n} from \"react-router-dom\";\nimport { LoginScreen } from '../components/auth/LoginScreen'\nimport { RegisterScreen } from '../components/auth/RegisterScreen'\n\nexport const AuthRouter = () => {\n  return (\n    <div className='auth__main'>\n      <div className='auth__box-container'>\n        <Switch>\n          <Route\n            exact\n            path='/auth/login'\n            component={LoginScreen}\n          />\n\n          <Route\n            exact\n            path='/auth/register'\n            component={RegisterScreen}\n          />\n          <Redirect to='/auth/register'/>\n        </Switch>\n      </div>\n    </div>\n  )\n}\n","import React  from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect, Route } from 'react-router-dom'\n\nexport const PublicRoute = ({\n  \n  isAuth, \n  component: Component,\n  ...rest\n\n  }) => {\n\n  return (\n    <Route \n      {...rest}\n      component={ (props) => (\n        ( !isAuth)\n          ? <Component {...props} />\n          : <Redirect to='/' />\n      )}\n    />\n  )\n}\n\nPublicRoute.propTypes = {\n  isAuth: PropTypes.bool.isRequired,\n  component: PropTypes.func.isRequired\n}","import React  from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect, Route } from 'react-router-dom'\n\nexport const PrivateRoute = ({\n  \n  isAuth, \n  component: Component,\n  ...rest\n\n  }) => {\n\n\n  return (\n    <Route \n      {...rest}\n      component={ (props) => (\n        ( isAuth )\n          ? <Component {...props} />\n          : <Redirect to='/auth/login' />\n      )}\n    />\n  )\n}\n\nPrivateRoute.propTypes = {\n  isAuth: PropTypes.bool.isRequired,\n  component: PropTypes.func.isRequired\n}","import React, { useEffect, useState } from 'react'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Redirect\n} from \"react-router-dom\";\nimport { JournalScreen } from '../components/journal/JournalScreen'\nimport { AuthRouter } from './AuthRouter'\nimport {firebase} from '../firebase/firebase-config';\nimport { useDispatch } from 'react-redux';\nimport { login } from '../actions/auth';\nimport { PublicRoute } from './PublicRoute';\nimport { PrivateRoute } from './PrivateRoute';\nimport { startLoadingNotes } from '../actions/notes';\n\nexport const AppRouter = () => {\n\n  const dispatch = useDispatch();\n\n  const [checking, setChecking ] = useState(true)\n  const [isLoggedIn, setIsLoggedIn] = useState(false)\n\n  useEffect(() => {\n    \n    firebase.auth().onAuthStateChanged(async(user) => {\n      if( user?.uid ) {\n        dispatch(login(user.uid, user.displayName));\n        setIsLoggedIn(true)\n\n        dispatch(startLoadingNotes(user.uid))\n\n      } else {\n        setIsLoggedIn ( false )\n      }\n\n      setChecking(false)\n    })\n\n  }, [dispatch, setChecking, setIsLoggedIn])\n\n  if (checking) {\n    return ( \n      <h1>Loading...</h1>\n    )\n  }\n\n  return (  \n      <Router>\n        <div>\n          <Switch>\n            <PublicRoute \n              \n              path='/auth'\n              component={AuthRouter}\n              isAuth={isLoggedIn}\n            />\n            <PrivateRoute\n              exact\n              path='/'\n              component={JournalScreen}\n              isAuth={isLoggedIn}\n            />\n            <Redirect to='/auth/login' />\n          </Switch>\n        </div>\n      </Router>        \n  )\n}\n","import React from 'react';\nimport { Provider } from 'react-redux';\n\n\nimport { store } from './store/store';\nimport { AppRouter } from './routers/AppRouter'\n\n\n\nimport './styles/styles.scss'\n\nexport const JournalApp = () => {\n  return (\n    <Provider store={store}>\n      <AppRouter />\n    </Provider>\n  )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { JournalApp } from './JournalApp';\n\n\nReactDOM.render(\n  \n  <JournalApp />,\n\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}